service: sqs-lambda-tutorial # NOTE: update this with your service name

 custom:
     queueName: TutorialSQS
     stage: dev
     dev-region: us-east-1
     dev-accountid: 968277166688

 provider:
   name: aws
   runtime: python3.6

   iamRoleStatements:
       - Effect: "Allow"
         Action:
           - "sqs:SendMessage"
         Resource:
           Fn::GetAtt: [ SQSQueue, Arn ]

 functions:
   start-lambda:
     handler: handler.start
     environment:
       SQS_URL:
         Ref: SQSQueue

   end-lambda:
     handler: handler.end
     events:
       - sqs:
           arn:
             Fn::GetAtt: [ SQSQueue, Arn ]

 resources:
   Resources:

     SQSQueue:
         Type: 'AWS::SQS::Queue'
         Properties:
           QueueName: '${self:custom.queueName}'

     createAPIGateway:
         Type: 'AWS::ApiGateway::Resource'
         Properties:
           ParentId:
             Fn::GetAtt:
               - "ApiGatewayRestApi"
               - "RootResourceId"
           PathPart: "createnotification"
           RestApiId:
             Ref: ApiGatewayRestApi

     SQSAPIMethod:
         Type: 'AWS::ApiGateway::Method'
         DependsOn: SQSQueue
         Properties:
           RestApiId:
             Ref: ApiGatewayRestApi
           ResourceId: {Ref: createAPIGateway}
           HttpMethod: POST
           MethodResponses:
             - {StatusCode: '200', ResponseParameters: {method.response.header.Access-Control-Allow-Origin: true}}
           AuthorizationType: NONE
           Integration:
             Type: AWS
             Credentials: {'Fn::GetAtt': [APIGatewaySQSIAM, Arn]}
             RequestParameters: {integration.request.querystring.Action: '''SendMessage''', integration.request.querystring.MessageAttribute.1.Value.DataType: '''String''', in
             IntegrationHttpMethod: POST
             RequestTemplates: {application/json: '{statusCode:200}'}
             IntegrationResponses: [{StatusCode: '200', ResponseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}, ResponseTemplates: {application/json
             Uri: 'arn:aws:apigateway:${self:custom.${self:custom.stage}-region}:sqs:path//${self:custom.${self:custom.stage}-accountid}/TutorialSQS'


     APIGatewaySQSIAM:
       Type: 'AWS::IAM::Role'
       Properties:
         Path: /app/all/
         RoleName: APIGSQSRole
         AssumeRolePolicyDocument:
           Version: '2012-10-17'
           Statement:
             - Effect: Allow
               Principal:
                 Service:
                   - apigateway.amazonaws.com
               Action: sts:AssumeRole
         Policies:
           - PolicyName: APIGATEWAYIAMAll
             PolicyDocument:
               Version: '2012-10-17'
               Statement:
                 - Effect: Allow
                   Resource: "*"
                   Action:
                     - logs:CreateLogGroup
                     - logs:CreateLogStream
                     - logs:PutLogEvents
                 - Effect: Allow
                   Resource:
                     - "*"
                   Action:
                     - "sqs:SendMessage"

     ApiGatewayRestApi:
       Type: AWS::ApiGateway::RestApi
       Properties:
         Name: ApiGatewayRestApi
